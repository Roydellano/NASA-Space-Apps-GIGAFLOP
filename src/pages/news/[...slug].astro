---
import { type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { getSafeNewsCollection } from '../../utils/newsLoader';

export async function getStaticPaths() {
  const newsEntries = await getSafeNewsCollection();
  return newsEntries.map((entry: CollectionEntry<'news'>) => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<'news'>;
}

const { entry } = Astro.props as Props;
const { Content } = await entry.render();
const { title, summary, publishDate, tags, readTime, priority, featuredImage, url, doi, journal, authors, chartData } = entry.data;

const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    timeZone: 'UTC'
  });
};

const formatTime = (date: Date) => {
  return date.toLocaleTimeString('en-US', {
    hour: '2-digit',
    minute: '2-digit',
    timeZone: 'UTC'
  });
};

// Check if article is within last 2 days
const isRecentArticle = (publishDate: Date) => {
  const now = new Date();
  const twoDaysAgo = new Date(now.getTime() - 2 * 24 * 60 * 60 * 1000);
  return publishDate >= twoDaysAgo;
};

// Get related articles (same tags, excluding current)
const allNews: CollectionEntry<'news'>[] = await getSafeNewsCollection();
const relatedArticles = allNews
  .filter(article => 
    article.slug !== entry.slug && 
    article.data.tags.some((tag: string) => tags.includes(tag))
  )
  .slice(0, 3);
---

<Layout 
  title={`${title} | BioNauta`} 
  description={summary}
  bodyClass="article-page"
>
  <Header />
  
  <main class="article-main">
    <!-- Article Header -->
    <header class="article-header">
      <div class="container">
        <div class="article-header-content">
          <!-- Breadcrumb -->
          <nav class="breadcrumb">
            <a href="/" class="breadcrumb-link">Home</a>
            <span class="breadcrumb-separator">/</span>
            <a href="/all" class="breadcrumb-link">Publications</a>
            <span class="breadcrumb-separator">/</span>
            <span class="breadcrumb-current">Article</span>
          </nav>

          <!-- Article Meta -->
          <div class="article-meta">
            <div class="meta-left">
              {priority === 'high' && isRecentArticle(publishDate) && (
                <span class="priority-badge">High Priority</span>
              )}
              <div class="article-tags">
                {tags.map((tag: string) => (
                  <span class="tag">{tag}</span>
                ))}
              </div>
            </div>
            <div class="meta-right">
              <time class="publish-date">
                {formatDate(publishDate)}
              </time>
              <span class="read-time">{readTime} min read</span>
            </div>
          </div>

          <!-- Article Title -->
          <h1 class="article-title">{title}</h1>

          <!-- Article Summary -->
          <p class="article-summary">{summary}</p>

          <!-- Publication Info -->
          <div class="publication-info">
            {authors && authors.length > 0 && (
              <div class="publication-field">
                <span class="publication-label">Authors:</span>
                <span class="publication-value">{authors.join(', ')}</span>
              </div>
            )}
            {journal && (
              <div class="publication-field">
                <span class="publication-label">Journal:</span>
                <span class="publication-value">{journal}</span>
              </div>
            )}
            {doi && (
              <div class="publication-field">
                <span class="publication-label">DOI:</span>
                <span class="publication-value">{doi}</span>
              </div>
            )}
            {url && (
              <div class="publication-field">
                <span class="publication-label">Original Publication:</span>
                <a href={url} target="_blank" rel="noopener noreferrer" class="publication-link">
                  {url}
                  <svg class="external-link-icon" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
                    <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
                  </svg>
                </a>
              </div>
            )}
          </div>

          <!-- AI Summary Notice -->
          <div class="ai-summary-notice">
            <svg class="info-icon" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
            </svg>
            <p class="notice-text">
              <strong>Note:</strong> This page presents an AI-generated summary of the research. 
              For the complete original publication, please follow the link above.
            </p>
          </div>

          <!-- Featured Image -->
          {featuredImage && (
            <div class="featured-image-container">
              <img 
                src={featuredImage} 
                alt={title} 
                class="featured-image"
                loading="lazy"
              />
              <p class="ai-generated-legend">AI Generated</p>
            </div>
          )}
        </div>
      </div>
    </header>

    <!-- Article Content -->
    <article class="article-content">
      <div class="container">
        <div class="content-wrapper">
          <div class="article-body">
            <Content />
            
            <!-- Chart Section -->
            {chartData && typeof chartData === 'object' && chartData.type && chartData.type !== 'none' && chartData.data && (
              <div class="chart-section">
                <h2 class="chart-title">Data Visualization</h2>
                <div class="chart-container">
                  <canvas id="article-chart"></canvas>
                </div>
              </div>
            )}
            
            <!-- Article Footer -->
            <footer class="article-footer">
              <div class="back-navigation">
                <a href="/" class="back-link">
                  <svg class="back-icon" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                  </svg>
                  Back to Homepage
                </a>
              </div>
              <div class="back-navigation">
                <a href={`https://www.google.com/search?q=@gemini+explain ${encodeURIComponent(title)}`} class="back-link" style="color: #6366f1;" onmouseover="this.style.color='#4338ca';" onmouseout="this.style.color='#6366f1';" target="_blank">
                  Learn more with Gemini
                  <svg class="back-icon" viewBox="0 0 20 20" fill="currentColor" style="transform: rotate(180deg);">
                    <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                  </svg>
                  &nbsp;
                </a>
              </div>
            </footer>
          </div>

          <!-- Sidebar -->
          <aside class="article-sidebar">
            <!-- Related Articles -->
            {relatedArticles.length > 0 && (
              <div class="related-section">
                <h3 class="related-title">Related Publications</h3>
                <div class="related-articles">
                  {relatedArticles.map((article) => (
                    <a href={`/news/${article.slug}`} class="related-article">
                      <h4 class="related-article-title">{article.data.title}</h4>
                      <p class="related-article-summary">{article.data.summary}</p>
                      <div class="related-article-meta">
                        <time class="related-date">{formatDate(article.data.publishDate)}</time>
                        <span class="related-read-time">{article.data.readTime} min</span>
                      </div>
                    </a>
                  ))}
                </div>
              </div>
            )}

            <!-- Newsletter Signup -->
           {/* <div class="newsletter-sidebar">
              <h3 class="newsletter-sidebar-title">Stay Updated</h3>
              <p class="newsletter-sidebar-text">
                Get the latest NASA bioscience research updates delivered to your inbox.
              </p>
              <form class="newsletter-sidebar-form">
                <input 
                  type="email" 
                  placeholder="Coming soon" 
                  disabled
                  class="newsletter-sidebar-input"
                  required
                />
                <button type="submit" class="newsletter-sidebar-button">
                  Subscribe
                </button>
              </form>
            </div> */}
          </aside>
        </div>
      </div>
    </article>
  </main>

  <Footer />
  
  {chartData && typeof chartData === 'object' && chartData.type && chartData.type !== 'none' && chartData.data && (
    <>
      <script is:inline src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
      <script define:vars={{ chartData }}>
        document.addEventListener('DOMContentLoaded', function() {
          try {
            const ctx = document.getElementById('article-chart');
            if (ctx && typeof Chart !== 'undefined' && chartData && chartData.data) {
              new Chart(ctx, {
                type: chartData.type,
                data: chartData.data,
                options: chartData.options || {}
              });
            }
          } catch (error) {
            console.error('Error rendering chart:', error);
            // Optionally hide the chart container on error
            const chartSection = ctx?.closest('.chart-section');
            if (chartSection) {
              chartSection.style.display = 'none';
            }
          }
        });
      </script>
    </>
  )}
</Layout>


